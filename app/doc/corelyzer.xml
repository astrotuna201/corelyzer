<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://docbook.org/xml/4.5/docbookx.dtd">

<book>
  <bookinfo>
    <title>Corelyzer User's Manual</title>

    <authorgroup>
      <author>
        <firstname>Yu-Chung</firstname>
        <othername>"Julian"</othername>
        <surname>Chen</surname>
        <email id="juliansmail">julian at evl.uic.edu</email>
      </author>
	  <author>
		<firstname>Brian</firstname>
		<surname>Grivna</surname>
		<email id="briansmail">brian.grivna at gmail</email>
	  </author>
    </authorgroup>

    <date>06/21/2012</date>
    <releaseinfo>Version 5, 06.21.2012</releaseinfo>

    <abstract>
      <para>
        <application>Corelyzer</application> 
        is a scalable, extensible visualization tool developed to enhance the 
        study of geological cores. The strength of Corelyzer is the ability to 
        display large sets of core imagery, with multi-sensor logs, annotations 
        and plugin supported visuals alongside the core imagery. This
        document describes how to download, setup and use the software.
      </para>
    </abstract>
  </bookinfo>
  
  <preface>
    <title>About CoreWall</title>

      <para>
        The CoreWall Suite is a collaborative development for a
        real-time stratigraphic correlation, core description (CD) and
        data visualization system to be used by the marine, terrestrial 
        and Antarctic science communities. The development will be
        carried out in broad collaboration with stakeholders in these
        science communities.
      </para>

      <para>
        To ensure that the software development does not occur independent of
        related IT activities, in particular, the development of the
        U.S. IODP-Phase 2 Scientific Ocean Drilling Vessel (SODV), a Steering
        Committee will be constituted. The Steering Committee will be
        comprised of key U.S. IODP and related database (e.g., CHRONOS, SedDB)
        developers and users as well as representatives of other core-based
        enterprises (e.g., ANDRILL, ICDP, LacCore). Data will be made
        available directly from the numerous hard rock and sediment databases
        or through access provided by a portal such as CHRONOS. CoreWall's
        software displays section images from one or more cores along with
        discrete data streams and nested images to provide a robust approach
        to the description of sediment cores. Split-core surface images are
        the fundamental template of sediment descriptive work. Loaded
        horizontally and viewed in high resolution along a sliding plane,
        features such as lithologic variation, macroscopic grain size
        variation, bioturbation intensity, chemical composition and
        micropaleontology are easier to interpret and annotate.
      </para>

      <para>
        In particular, the CoreWall Suite will incorporate the new Correlator
        software, the updated version of CLIP (e.g.,Sagan and Splicer) that
        was developed by the Lamont group more than 10 years ago, into a new
        portable visualization tool that will work across multiple platforms
        and interact seamlessly with both JANUS (ODP's relational database),
        CHRONOS, PetDB, SedDB, dbSEABED and other databases. This
        functionality will result in a CoreWall Suite module that can be used
        and distributed anywhere for stratigraphic and age correlation
        tasks. The versatility and flexibility of these enhanced software
        tools will allow geoscientists to integrate shipboard data entered
        into the JANUS database with 3rd party analyses of samples distributed
        to other scientists or generated by other programs and projects. While
        doing this, we will abstract the functional algorithms that drive
        NCLIP into software libraries that will be used in the CoreWall Suite
        so that they are available for other software development projects
        that want to build on these modules. In this way, the critical depth
        mapping functionality and enhancements that resulted in NCLIP will be
        integrated into the remarkable visualization capability that is
        CoreWall, which is envisioned to be at the heart of a next-generation
        suite of tools required by the IODP and other ocean science research
        programs, as well as ICDP and other terrestrial core-based research
        programs.
      </para>

      <para>
        CoreWall's high-resolution tiled LCD display gives geoscientists a 
        large-scale perspective, helpful in processing and comparing 
        high-resolution digital line-scan images of cores measuring up to 
        hundreds of feet long. A prototype desktop environment for 
        CoreWall is Personal GeoWall2 (PG2) , a system that uses 
        a single computer to drive four LCD panels as well as 
        a single-screen stereo GeoWall display.
      </para>

      <para>
        CoreWall Affiliate Partners
        
        <simplelist>
          <member>Oceanleadership Consortium</member>
          <member>USIO Science Services, TAMU: Integrated Ocean Drilling
          Program at Texas A &amp; M University</member>
          <member>CHRONOS</member>
          <member>ANDRILL: Antarctic Geological Drilling Program</member>
          <member>LacCore: U.S. National Lacustrine Core Repository at
          University of Minnesota</member>
          <member>Electronic Visualization Laboratory, University of
          Illinois at Chicago</member>
        </simplelist>
      </para>

      <para>
        Corelyzer is being developed by the University of Illinois at
        Chicago’s Electronic Visualization Laboratory with funding
        provided by the National Science Foundation under the
        agreement number OCE-0602121.
      </para>

      <figure>
        <title>National Science Foundation Logo</title>
        <graphic fileref="images/nsflogo.png" />
      </figure>

      <figure>
        <title>Electronic Visualization Laboratory Logo</title>
        <graphic fileref="images/evllogo.png" />
      </figure>

      <figure>
        <title>LacCore Logo</title>
        <graphic fileref="images/laccorelogo.png" />
      </figure>

      <figure>
        <title>Borehole Research Group, LDEO Logo</title>
        <graphic fileref="images/brglogo.jpg" />
      </figure>

      <figure>
        <title>CoreWall Logo</title>
        <graphic fileref="images/corewall_logo.png" />
      </figure>

      <figure>
        <title>Corelyzer Logo</title>
        <graphic fileref="images/corelyzerlogo.jpg" />
      </figure>

  </preface>

  <chapter>
    <title>Pre-installation Requirements</title>

    <sect1>
      <title>Hardware</title>
      <para>
        Corelyzer takes advantage of hardware-accelerated
        graphics. While a primarily 2D visualization program,
        Corelyzer uses OpenGL to accelerate the rendering and take
        advantage of modern day graphics boards. This does mean that
        the performance of the application is not only dependent on
        the speed of your CPU but also the power of your Graphics
        Processing Unit (GPU). Any modern day graphics card that can
        run video games from a few years back can easily run
        Corelyzer. Currently the leaders in graphics card technologies 
        are Nvidia and ATI.
      </para>

      <para>
        Corelyzer can use lots of hard drive space and main memory. It
        is recommended to have at least 2GB of RAM on your machine if
        you intend on looking at a hundred meters of high-resolution
        core images, or more. One more thing to note is that Corelyzer
        does not currently have any mechanisms to support
        heterogeneous display settings. This means that if you have a
        monitor that only goes up to 1280x1024 and another at
        1600x1200, you will have to choose one or the other when
        setting up your Corelyzer display settings when running the
        application.
      </para>
    </sect1>

    <sect1>
      <title>Example Hardware Setups</title>
      <para>
        The key for CoreWall is large screens and a good graphics card. We
        would suggest eith the Dell or Apple 30" LCD monitors. And in order to
        drive each 30" monitor, you will need graphics cards with a
        "dual-link" DVI port. If you intend to use 2 30" monitors, then you
        will need "dual-dual-link" ports. Possible selections (but may not
        limite to) are ATI Radeon X1900 XT and NVIDIA Quadro FX 4500 cards.

        Following are some CoreWall setups out there. Each contact is
        listed. If you need more information please contact each indiviuals or
        Julian Yu-Chung Chen <email id="juliansmail2">julian at evl.uic.edu</email>. 
      </para>

      <sect2>
        <title>ANDRILL - Antarctica Geological Drilling</title>
        <para>
          ANDRILL's CoreWall Hardware Spec: an Apple Mac Pro with
          nVidia Quadro FX 4500 graphics card. 2 30" Apple Cinema
          Displays. 
          Contact: Josh Reed <email id="joshsemail">jareed at andrill.org</email>
        </para>

        <figure>
          <title>ANDRILL CoreWall Setup</title>
          <graphic fileref="images/andrill_hw_setup.jpg"/>
        </figure>
      </sect2>

      <sect2>
        <title>Electronic Visualization Laboratory, University of
        Illinois at Chicago</title>
        <para>
          EVL's CoreWall Hardware Spec: a Dell Pentium 4 XPS PC with 3
          PCI nVidia Quadro FX500 graphics cards. 5 20" ViewSonic LCD
          Displays. Contact: Julian Yu-Chung Chen<email
          id="juliansemail">julian at evl.uic.edu</email>
        </para>

        <figure>
          <title>EVL CoreWall Setup</title>
          <graphic fileref="images/evl_hw_setup.jpg"/>
        </figure>
      </sect2>

      <sect2>
        <title>National Lacustrine Core Repository, University of Minnesota</title>
        <para>
          LacCore's CoreWall Hardware Spec: a PC (customiz-built
          Reason / Athlon 64 X2 Dual Core Processor 4200+, 2.21GHz,
          3.25G RAM, 1TB HD) with NVIDIA GeForce 7900 GTX (512MB
          RAM). 1 30" Dell LCD Display. Contact: Anders Noren <email
          id="andersemail">noren021 at umn.edu</email>
        </para>

        <figure>
          <title>LacCore CoreWall Setup</title>
          <graphic fileref="images/laccore_hw_setup.jpg"/>
        </figure>
      </sect2>

      <sect2>
        <title>Lamont-Doherty Earth Observatory, the Earth Institute
        at Columbia University</title>
        <para>
          LDEO's CoreWall Hardware Spec: a Mac Pro with 4 nVidia
          GeForce 7300 GT graphics cards. 6 Apple 23" Cinema
          Displays. <ulink
          url="http://corelyzer.blogspot.com/2007/10/ldeo-corewall-setup-details.html">
          More Information</ulink> Contact: Sean Higgins 
          <email id="seansemail">sean at ldeo.columbia.edu</email>
        </para>

        <figure>
          <title>LDEO CoreWall Setup</title>
          <graphic fileref="images/ldeo_hw_setup.jpg"/>
        </figure>
      </sect2>

    </sect1>

    <sect1>
      <title>Software</title>
      <para>
        Corelyzer, starting from version 0.6 makes use of the Java
        Runtime Environment (JRE). The current version of Corelyzer requires
        Java Runtime Environment above version 1.5.0. Please make sure
        to install Java 1.5.
      </para>

      <para>
        For Microsoft Windows users, Corelyzer will bundle a copy of
        JRE within the downloaded package. You should not have to
        install JRE separately.
      </para>
     
      <para>
        For Mac users, in the current Mac OS X Leopard, Java is
        bundled with the operating system. In some cases of Mac OS X
        Tiger installation, Java 1.4 might be still presented in the
        system. In that case, you will have to modify the default 
        version to version 1.5.

        <figure>
          <title>Setup default Java version in Mac OS X</title>
          <graphic fileref="images/mac_default_java.png" />
        </figure>

      </para>
    </sect1>

  </chapter>

  <chapter>
    <title>Download and Install Corelyzer</title>

    <sect1>
      <title>Download Corelyzer</title>
      <para>
        You can download copies of the application for the following
        platforms at the main download page:  
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/downloads.php">
          http://www.evl.uic.edu/cavern/corewall/downloads.php
          </ulink>.
      </para>
    </sect1>

    <sect1>
      <title>Install Corelyzer</title>

      <sect2>
        <title>Microsoft Windows Users</title>
        <para>
          We provide an
          installer program for Windows users. Please download the
          installer .exe
          file from the <ulink
          url="http://www.evl.uic.edu/cavern/corewall/downloads.php">download
          page</ulink>, double click the icon and follow the installer
          instructions. 

          <figure>
            <title>Corelyzer Windows Installer</title>
            <graphic fileref="images/windows_install.png" />
          </figure>
        </para>
      </sect2>

      <sect2>
        <title>Apple Mac OS X Users</title>
        <para>
          If you use Safari browser, the application should be
          downloaded and extracted in your "Downloads" directory. If
          you use other browsers, please unzip the downloaded file
          (double-click it) and you will get the application. 
        </para>

        <para>
          You can drag-and-drop the application in your
          preferred disk location like the “/Applications” directory
          or even your Desktop. Double click the icon will launch the
          Corelyzer program.

          <figure>
            <title>Corelyzer in Mac OS X</title>
            <graphic fileref="images/mac_install.png" />
          </figure>
        </para>
      </sect2>

    </sect1>
  </chapter>

  <chapter>
    <title>Start Corelyzer</title>

    <sect1>
      <title>Setting up the desktop environment</title>
      <para>
        Before we start Corelyzer, we must first make sure our display
        settings are correct. On both the Mac and Windows, the default
        monitor should be the “upper left most monitor”.
      </para>

      <sect2>
        <title>Microsoft Windows Users</title>
        <para>
          To setup the monitors on windows, you must first go to your
          "Display". You can do this by going to your Start
          menu, selecting "Control Panel" and double-clicking on
          "Display".

          <figure>
            <title>Display in Control Panel</title>
            <graphic fileref="images/windows_controlpanel.png" />
          </figure>
        </para>

        <para>
          Once opened, please go to the Settings tab. Here you will
          see boxes with numbers, and below those options that can be
          adjusted. The boxes with numbers represent your monitors
          that you have connected to your machine. If you have a
          monitor that is not displaying your desktop then it will
          show up as a slightly grayed-out box, which is a visual
          description that says this monitor is disabled. If the box
          indicates the monitor is disabled and you click on the box,
          you will be able to modify the options for that monitor. To
          enabled the monitor, make sure that the check box next to
          Extend my desktop... is checked. Do this for all the
          monitors you would like to use, presumably all of them. Once
          you have done that, click on the Apply button. If you did
          this correctly, you will have your desktop visible on all
          the monitors. 
          
          <figure>
            <title>Display</title>
            <graphic fileref="images/windows_displayproperties.png" />
          </figure>
        </para>

        <para>
          Note: Some monitors need to be turned off and on again to
          realize that they are enabled by Windows. Now that the
          desktops are visible on your monitors, you will need to set
          the display resolution for all of the monitors. Corelyzer
          requires that you set your display settings so that all the
          monitorss will have the same resolution. Example resolutions
          are 1280x1024 and 1600x1200. There is a slider on your
          display settings dialog to modify the resolution. Once set
          for all monitors, click on the Apply button again. If you
          are prompted to restart your machine in order for the
          changes to take affect, then do so. Otherwise, the
          resolution of your monitors will change and you will be
          prompted to keep the settings or change them back. 
        </para>

        <para>
          Note: If your monitors do not support a particular
          resolution they will likely display that or they will stay
          black. If you do not like your settings, wait for some time
          and Windows will revert back. After you have enabled your
          monitors and configured their display settings, you should
          make sure that the layout of the monitors matches the layout
          of the boxes in your display settings. First we need to
          identify which box represents which monitor, and we can do
          this by seeing what number has been assigned to each monitor
          by Windows. To do this, click on the Identify button. When
          you do this, your monitors will display a number indicating
          which box refers to which monitor. If your monitors are
          ordered differently than the boxes that are shown on your
          display settings, then you will need to re-arrange your
          monitors. This is easily done by clicking and dragging the
          boxes in your settings window. Again, you should make sure
          that the upper left most box matches with your upper left
          most monitor and that monitor is enabled as your Primary
          Monitor.
        </para>

        <para>
          Note that the desktop numbering in Microsoft Windows
          is depending on the order of how you connect monitors to
          graphic card connectors. It may not appear in ascending
          order from left to right. All you have to make sure is the
          ordering is matched in the onscreen identify result and the
          display properties display, as shown in the following two
          screenshots.

          <figure>
            <title>Example desktop configuration</title>
            <graphic fileref="images/windows_desktops.png"/>
          </figure>

          <figure>
            <title>Arrange desktops with drag-and-drop</title>
            <graphic fileref="images/windows_desktopdrag.png" />
          </figure>

        </para>
      </sect2>

      <sect2>
        <title>Apple Mac OS X Users</title>
        <para>
          To setup your monitors on your Mac you will need to get to
          the display settings. To do this, open the "System
          Preferences" application in your "/Applications" directory. Then
          choose "Displays" and you will see a dialog window on each
          monitor that is connected to your machine.

          <figure>
            <title>Displays setup in System Preferences</title>
            <graphic fileref="images/mac_displays.png" />
          </figure>
        </para>
        
        <para>
          Make sure the display resolution on each monitor is the
          same. After fixing the resolution, go to your main window
          and select the "Arrangement" tab. You will then see a layout
          of boxes that indicate how your monitors are laid
          out. Unfortunately there is no way to identify which monitor
          is represented by which box, as you can on Windows. You will
          need to arrange the boxes to match your monitor arrangement.
        </para>

        <para>
          You will have to make sure the upper left
          most monitor in your arrangement will be the main
          monitor. On the Mac, the main monitor is visible in the
          Arrangement tab as the box that contains a white rectangle
          along the top of the box. To designate a different monitor
          to be the main monitor, simply drag the white rectangle to
          the box that should be the main monitor. This white
          rectangle is actually the menu bar you see on top of your
          monitor. Once the rectangle has been moved, the menu bar
          will also move.

          <figure>
            <title>Arrange tab in Displays setting</title>
            <graphic fileref="images/mac_display_arrangement.png" />
          </figure>

        </para>

        <para>
          If you are making a presentation then you may want to mirror
          your display, but normally you don't want to mirror your
          display so that you will have more screen real estate to
          view your core images and data.
        </para>
      </sect2>
    </sect1>

    <sect1>
      <title>Corelyzer Preferences</title>
      <para>
        To start Corelyzer double click on the Corelyzer icon.
        If you start up Corelyzer for
        the first time, a preferences configuration window will show
        up. The window is the Corelyzer Preferences window. Using this
        preferences window you can specify your scratch disk location,
        display settings, and some user interface features.

        <figure>
          <title>Corelyzer Preferences Window</title>
          <graphic fileref="images/corelyzer_preferences.png"  />
        </figure>
      </para>

      <sect2>
        <title>Directories Panel</title>
        <para>
          Corelyzer will use part of your hard disk to store
          pre-processed different levels of imagery blocks. Also, for
          some images that are not available in user’s machine, but
          their URLs are provided, Corelyzer can download them to the
          download directory specified here. It is recommended to select
          a bigger and fast hard disk.

          <figure>
            <title>Directories preferences</title>
            <graphic fileref="images/corelyzer_directories.png" />
          </figure>
        </para>
      </sect2>

      <sect2>
        <title>Display Preferences</title>
        <para>
          Here you can set the display configuration that Corelyzer will
          use. More often than not you will have it match the display
          configuration you setup with your operating system (See above
          sections). The Display Configuration window will store your
          settings. Once you have set this up the first time, Corelyzer
          will load the saved configurations every time after without
          popping up the preferences window. 
        </para>

        <para>
          <itemizedlist>

            <listitem>
              <para>
                Rows, Columns: define how many monitors do you have
                and how they are arranged.
              </para>
            </listitem>

            <listitem>
              <para>
                Screen Width, Screen Height: define the size of
                a single monitor in pixels. If you
                start the Preferences configuration for the first
                time, the full screen dimension will be used.
              </para>
            </listitem>

            <listitem>
              <para>
                Screen DPI X, Screen DPI Y: DPI stands for "dots per
                inch". These defines the mapping from pixels to
                physical measurement. In most cases, you can leave
                them as default values.
              </para>
            </listitem>

            <listitem>
              <para>
                Column Offset, Row Offset: Defines the offsets of the
                visualization area from the origin (upper-left corner
                of the primary monitor).
              </para>
            </listitem>

            <listitem>
              <para>
                Border Tickness: The visualization takes into account
                the monitor border in tiled displays setup. In most
                cases, you can leave them with the default values.
              </para>
            </listitem>

          </itemizedlist>
        </para>

        <figure>
          <title>Display Preferences</title>
          <graphic fileref="images/corelyzer_display.png" />
        </figure>
      </sect2>

      <sect2>
        <title>User Interface Preferences</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Auto check version in startup: if the program
                automatically check for latest update in startup.
              </para>
            </listitem>

            <listitem>
              <para>
                Lock core section image: if the program will make
                loaded section image stationary (user can not move it
                to arbitrary depths).
              </para>
            </listitem>

            <listitem>
              <para>
                Use Quaqua: if the program will use "Quaqua" library
                to make the user interface components more Mac-like
                (only for Mac).
              </para>
            </listitem>

            <listitem>
              <para>
                Double clicks to zoom to section: if zoom in/out with
                double click.
              </para>
            </listitem>

            <listitem>
              <para>
                Graph auto-scale: if the plotting graphs automatically
                scale during zoom in and zoom out.
              </para>
            </listitem>

            <listitem>
              <para>
                Annotation icon auto-scale: if the annotation icons
                automatically scale during zoom in and zoom out.
              </para>
            </listitem>

            <listitem>
              <para>
                Show origin axis: if show the visualization origin axis.
              </para>
            </listitem>

            <listitem>
              <para>
                Show section labels: if show the section label if no
                images are available (with loaded graphs).
              </para>
            </listitem>

            <listitem>
              <para>
                Canvas Always Below: if the visualization area always
                below all external applications on the desktop.
              </para>
            </listitem>

            <listitem>
              <para>
                Depth-scroll in vertical depth mode: if the mouse
                wheel action interpreted as scroll along the depth
                instead of default zoom in/out action when the depth
                mode is set to "vertical".
              </para>
            </listitem>

            <listitem>
              <para>
                Horizontal or Vertical Depth: defines the depth
                orientation. The depth is defined from left to right
                (deeper) by default (horizontal depth). If "Vertical
                Depth" is selected, the depth will mean from top to
                below (deeper).
              </para>
            </listitem>

            <listitem>
              <para>
                Canvas background color: defines the background color
                of the visualization canvas. 
              </para>
              
            </listitem>

            <listitem>
              <para>
                Canvas grid: enable/disable and defines the background
                measurement grid parameters. In "Grid Type", 5 types of
                grid are supported: Basic Cross, Horizontal Lines,
                Vertical Lines, Points and Cross Points.
              </para>
            </listitem>

          </itemizedlist>
        </para>

        <figure>
          <title>User interface preferences</title>
          <graphic fileref="images/corelyzer_ui.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Session Sharing and DIS Preferences</title>
        <para>
          These 2 preference tabs customize functions for session
          sharing and default annotation dictionary definition. You
          can use the default values.
        </para>

      </sect2>

    </sect1>
  </chapter>

  <chapter>
    <title>Corelyzer Layout</title>
      <para>
        Once ‘OK’ button is clicked in the initial preferences
        configuration, a window (or multiple windows)
        will be created, according to your configuration, for the
        visualization display.
      </para>

      <figure>
        <title>Initial Corelyzer screen</title>
        <graphic fileref="images/corelyzer_init.png" />
      </figure>

      <para>
        And main Corelyzer layout can be divided in the following
        sections. 
        <orderedlist>
          <listitem><para>Tools palette</para></listitem>
          <listitem><para>iCores control window</para></listitem>
          <listitem><para>Visualization canvas</para></listitem>
        </orderedlist>
      </para>

      <sect1>
        <title>Tools Palette</title>
        <figure>
          <title>Tool Palette Functions</title>
          <graphic fileref="images/tool_palette.png" />
        </figure>

        <para>
          Tool Palette contains often used functions and modes. In
          multiple monitors setup, the Tool Palette will follow the
          cursor moving from one monitor to another. 
        </para>

        <para>
          The functions listed in the Tool Palette, from left to
          right.
        </para>

        <para>
          Interaction mode:

          <itemizedlist>
            <listitem>
              <para>
                Normal mode: Use drag-and-drop
                mouse gesture to pan and the mouse scroll wheel to
                zoom/out the visualization area.
              </para>
            </listitem>

            <listitem>
              <para>
                Create annotation mode: Crop a rectangle area to
                create annotation over loaded core images.
              </para>
            </listitem>

            <listitem>
              <para>
                Modify annotation marker mode: Select and highlight a
                created annotation to modify circled area and the
                annotation flag icon's position.
              </para>
            </listitem>

            <listitem>
              <para>
                Measure mode: To specify the start and end of an
                interested segment. The physical measurement will be
                calculated based on the mapping information specified
                in the Display settings of Preferences configuration.
              </para>
            </listitem>
          </itemizedlist>

          Cursor type:
          <itemizedlist>
            <listitem>
              <para>
                Regular navigation cursor: Only the mouse cursor will
                be shown when moving in the visualization canvas area.
              </para>
            </listitem>

            <listitem>
              <para>
                CrossHair cursor: In additional to the mouse cursor, a
                crosshair will be shown when mvoing in the
                visualization canvas area.
              </para>
            </listitem>
          </itemizedlist>

          Common system actions:
          <itemizedlist>
            <listitem>
              <para>
                Show/Hide main window: Show or hide the main iCores
                control window.
              </para>
            </listitem>

            <listitem>
              <para>
                Minimize Corelyzer: Minimize all Corelyzer layout components.
              </para>
            </listitem>

            <listitem>
              <para>
                Quit Corelyzer: Close Corelyzer application.
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </sect1>

      <sect1>
        <title>iCores control window</title>
        <para>
          The main iCores control window will be used to do major data
          management and accessing.
        </para>

        <sect2>
          <title>Menus</title>
          <para>
            The menubar has "File", "Edit", "Share", "Plugins",
            "Lists", "Tools" and "Help" menus. Each menu options will
            be described in the actions in later chapters.
          </para>
        </sect2>

        <sect2>
          <title>Local (status)</title>
          <para>
            Click on the "Local" label in the "My Core Repository"
            panel will show the main panel that contains current
            loaded "Session", "Track", "Sections", "Data Files" and
            "Data Fields". In current hierarchy architecture,
            Corelyzer can have multiple sessions. Each "session" can
            have multiple "tracks" and "data files". Each track can have
            multiple "sections" and each "data files" could have more
            than one data "fields".
          </para>

          <figure>
            <title>iCores control window</title>
            <graphic fileref="images/icores_window.png"/>
          </figure>
        </sect2>

        <sect2>
          <title>Subscriptions</title>
          <para>
            Corelyzer supports core data list syndication (CoreCast) via Atom
            feeds. If you subscribed to feeds, they will be attached
            to the "Subscription" label in "My Core Repository". Click
            on the subscribed feed entry will show the core summary in
            the right hand panel.
          </para>

          <figure>
            <title>iCores feed window</title>
            <graphic fileref="images/icores_feeds.png" />
          </figure>

        </sect2>
      </sect1>

      <sect1>
        <title>Visualization canvas</title>
        <para>
          This is the main area showing core data visualization.
        </para>

        <figure>
          <title>Visualization canvas with loaded core data</title>
          <graphic fileref="images/viz_canvas.png" />
        </figure>

        <para>
          A screen capture video of start and quit Corelyzer can be
          found in this <ulink
          url="http://www.evl.uic.edu/cavern/corewall/documents/movies/3.1-StartAndQuit.mov">link
          online (size: 1.2MB)</ulink>.
        </para>
      </sect1>

  </chapter>

  <chapter>
    <title>Load Images</title>
    <para>
		Before you begin, note that Corelyzer requires two pieces of data to render section images properly:

        <itemizedlist>
          <listitem><para>Are the images horizontally or vertically oriented? For horizontally
			oriented images, depth is assumed to increase from left to right. For vertically
			oriented images, top to bottom.</para></listitem>
          <listitem><para>What's their resolution in dots-per-inch (DPI)? This is necessary to
			draw images at the correct scale.</para></listitem>
        </itemizedlist>
		
		Knowing these prior to loading will make for a smoother experience!
    </para>
	
	<para>
		How do you determine the DPI of your image? This depends on the equipment in which the image was
		retrieved. Most line-scan cameras that are manufactured
		for the creation of high-resolution images of core sections indicate DPI on their packaging,
		but it seems that many don't save in the expected DPI. One method of ensuring a correct DPI is described in
		<ulink url="apas02.html">Making Sure the DPI of an Image is Correct</ulink>. When loading images
		you can also specify the length of a core section image, from which Corelyzer
		can calculate the appropriate DPI value.
	</para>

    <sect1>
      <title>Load images from local files</title>
		<para>
			To start the image loading process, select the menu item "File > Load Images > Open
			Local Image Files...". Choose the files you wish to load in the resulting dialog:
			
			<figure>
			  <title>Select image files to load</title>
			  <graphic fileref="images/loadImages-1.png" />
			</figure>
		</para>

		<para>
			By default, Corelyzer displays core imagery by placing section
			images in horizontal tracks. Each track corresponds to a single hole.
			After choosing Open, Corelyzer will attempt to organize the selected section images
			into tracks. The following dialog displays this attempted organization
			and allows the user to modify it as needed.
			
			<figure>
			  <title>Arrange loaded image files</title>
			  <graphic fileref="images/loadImages-2.png" />
			</figure>
			
			In Figure 5.2, the seven selected sections have been organized into three tracks.
			Tracks are indicated by "Track" prefixing their name and a beige background.
			Note that all sections and tracks have a green dot to their left indicating that
			they've just been loaded or created. Most operations in this dialog apply only to
			these "new"	tracks and sections. To adjust the structure and arrangement of tracks
			and sections, use the buttons described below:
			
			<itemizedlist>
			  <listitem><para>Move Up/Down: Move selected sections up/down within a track or between tracks.</para></listitem>
			  <listitem><para>Delete: Remove selected section or track from the list. Tracks containing
				sections cannot be deleted until emptied.</para></listitem>
			  <listitem><para>Rename Track: Rename selected track.</para></listitem>
			  <listitem><para>New Track: Create a new track.</para></listitem>
			</itemizedlist>
			
			Once the arrangement of sections and tracks is satisfactory, click the "Next >" button. The
			resulting dialog allows the user to set image properties. Corelyzer assumes Horizontal
			orientation and 254 DPI by default, and attempts to place sections in the same track end-to-end.
			
			<figure>
			  <title>Set image properties</title>
			  <graphic fileref="images/loadImages-3.png" />
			</figure>
			
			Values can be modified individually by clicking the cell you wish to change. To modify
			a value(s) for all sections in the table, use the Batch Input controls below. Check the
			"Batch input..." checkbox to enable the controls, enter the desired settings, then click
			the Apply button. Note that batch fields left blank will not modify the corresponding
			table cells. For instance, suppose your images are 128 DPI and vertically oriented. Choose
			Vertical in the drop-down box, enter 128 in both X and Y DPI fields, and delete the Length,
			Start Depth and Depth Increment fields. Click Apply, and only the DPI and Orientation cells
			will be updated.
		</para>

		<para>
		  If you know the
		  images' orientation, you can also specify that individually in
		  the image loading dialog shown below.
		</para>
		
		<para>
		  We also have to make sure that your images have the correct
		  dots-per-inch (DPI). Why does the DPI of the image matter? This
		  is discussed in detail in the appendix. It basically establish
		  the correct mapping between the image dimension to the physical
		  core dimensions. 
		</para>

		<para>
			When you are satisfied with the image properties, click the Finish button.
			Corelyzer will begin loading images with the specified parameters.
		</para>
		
		<para>
			Once completed, the visualization window will display core images
			and the Section listbox in the main iCores control window will update with the image
			filenames loaded in each track. Notice in the image below that the ruler in the core image
			closely matches the depth measurements at the bottom of
			the visualization window. This visual check is an excellent way to confirm the
			proper DPI values were used.
			
			<figure>
			  <title>Visualization canvas with loaded core section image</title>
			  <graphic fileref="images/loadImages-4.png" />
			</figure>
		</para>
	</sect1>

    <sect1>
      <title>Load Images from online services</title>
      <para>
        Corelyzer was built-in a simple interface to access online
        core image services like the IODP Janus
        database and IODP LIMS service to retrieve the high-resolution
        core section images.
      </para>

      <para>
        In current version, Corelyzer supports 3 online core image
        services: JANUS database with CHRONOS service, IODP LIMS
        on-shore database and IODP LIMS on-ship database. For 2 IODP
        LIMS services, the query web service protocol was used to
        retrieve core image's metadata.

        Corelyzer uses the CHRONOS webservices
        capabilities to access JANUS and retrieve the URLs to the
        images. 

        Corelyzer will
        rotate the images 90 degrees counter-clockwise, because all
        the IODP images are vertically oriented, where Corelyzer
        displays data horizontally. This plugin accuratly position the
        core sections using CHRONOS
        web service to access the curated length and top depth (mbsf)
        of each core section image.
      </para>

      <para>
        The user interface has been designed in a
        stream-lined manner. To bring up the plugin select the menu
        item File->"Show IODP lists..."->"Image list from services"
        tab. 
        
        Here are the steps to get image listing and load selected images:

        <orderedlist>
          <listitem><para>Select which online service to
          use. Currently CHRONOS, on-shore LIMS and on-ship LIMS
          services are available.</para></listitem>
          <listitem><para>Enter an IODP site to search for (e.g. site number 1215)</para></listitem>
          <listitem><para>Click on the Search button. A listing of
          core section images should become
          available</para></listitem>
          <listitem><para>You can optionally input the depth range to
          filter the returned available image section in the result
          table. Depth range should be input as string like "0-20",
          meaning only list image section of top depth from 0 meter to
          20 meters (mbsf). The default value 0.0 will list all image sections
          returned by the online service.</para></listitem>
          <listitem><para>Select the images to load</para></listitem>
          <listitem><para>Click on the "Load selected image files" button</para></listitem>
          <listitem><para>User must wait as image files are
            retrieved over the web, processed and displayed. A
            progress bar indicating the status will update during the
            process in the main window.</para></listitem>
          </orderedlist>
        </para>
          
        <para>
          Each loaded image will be loaded and placed in the seesion and track
          named with the combination of "leg", "site", "hole" and
          "core" metadata information from the online core image server.

          <figure>
            <title>Online core image service query interface</title>
            <graphic fileref="images/onlineImageService-1.png" />
          </figure>

          <figure>
            <title>Online core image service query</title>
            <graphic fileref="images/onlineImageService-2.png" />
          </figure>

        </para>

        <para>
          A screen capture video of these actions can be found in this
          <ulink
              url="http://www.evl.uic.edu/cavern/corewall/documents/movies/5.2-LoadJanusImages.mov">link
          online (size: 1.6MB)</ulink>.
        </para>


    </sect1>

    <sect1>
      <title>Load Images from CoreCast syndication feeds</title>
      <para>
        Corelyzer supports core data list syndication (CoreCast) via
        Atom feeds. If you subscribed to feeds, they will be attached
        to the "Subscription" label in "My Core Repository".
      </para>

      <sect2>
        <title>Subscribe to CoreCast feeds</title>
        <para>
          First show the iCores control window if it is not on the
          desktop. Then click on the plus icon to add a new feed.

          <figure>
            <title>Add a new feed</title>
            <graphic fileref="images/icores-1.png" />
          </figure>
        </para>

        <para>
          If you know the feed URL, just copy-paste the URL string in
          the popup dialog. Otherwise, you can click on the "Browse"
          button to list available feeds.

          <figure>
            <title>Specify feed URL</title>
            <graphic fileref="images/icores-2.png" />
          </figure>
        </para>

        <para>
          Here the "Browse" button is clicked. Next click on the
          "Refresh" button to show available feeds.

          <figure>
            <title>Refresh available lists</title>
            <graphic fileref="images/icores-3.png" />
          </figure>

        </para>

        <para>
          Check the feeds interested then click on "OK" to subscribe
          to selected feeds. These feeds will be added to the main
          iCores control window. Click on the feed entries under
          "Subscription" label will show the list of core images in
          the feed. Click on a core image entry above will show a
          summary report of the image at the panel below.

          <figure>
            <title>Select to subscribe feeds</title>
            <graphic fileref="images/icores-4.png" />
          </figure>
        </para>
      </sect2>

      <sect2>
        <title>Load core images from CoreCast feeds</title>
        <para>
          Select one or more interested core images and use mouse
          right-click to see available options.

          <figure>
            <title>Select core image entries and right-click</title>
            <graphic fileref="images/icores-5.png" />
          </figure>
        </para>

        <para>
          Select "Load" to download and load selected core images into
          Corelyzer. Select or fill in the intented track name for
          these selected core images.

          <figure>
            <title>Specify a track to hold selected core images</title>
            <graphic fileref="images/icores-6.png" />
          </figure>
        </para>

        <para>
          Click on "OK" will start the download and load
          process. Click on the "Local" label at the left hand side to
          see if the selected sections are loaded.

          <figure>
            <title>Images loaded with iCores feeds</title>
            <graphic fileref="images/icores-7.png" />
          </figure>
        </para>

        <para>
          A screen capture video of these actions can be found in this
          <ulink
              url="http://www.evl.uic.edu/cavern/corewall/documents/movies/5.3-LoadCoreCastImages.mov">link
          online (size: 10MB)</ulink>.
        </para>

      </sect2>

    </sect1>

    <sect1>
      <title>Load images using IODP-formatted section list</title>
      <para>
        Click on the meun "File" -> "IODP" -> "Load section list" and
        select a section list file in format like <ulink
        url="attachments/holeB.dat">example file</ulink> (remote
        image files) and <ulink
        url="attachments/A-mac.txt">example file</ulink> 
        (local image files) will load and
        show the content of the list as shown in the following screen
        captures.
      </para>
      
      <para>
        The section list file can be generated by any text editor or
        Excel. You will have to save the file as "tab-separated
        format". The file will need to include columns in order
        including: 
        "Leg",
        "Site", "Hole", "Core", "Type", "Section", "TopOffset", "BottomOffset",
        "Depth", "ImageLength" and "image file's source
        URL". Currently the "TopOffset" and "BottomOffset" are not
        really used. You can just fill in default value 0.0.
      </para>

      <para>
        Use mouse or keyboard to highlight the section that you want
        to load, and click on the "Load selected section" button at
        the bottom will initial section images downloading and loading
        into Corelyzer.

        <figure>
          <title>Select load section list in IODP menu</title>
          <graphic fileref="images/iodplist-menu.png" />
        </figure>

        <figure>
          <title>Select sections and load images</title>
          <graphic fileref="images/iodplist-sectionlist.png" />
        </figure>
      </para>
    </sect1>
    <sect1>
      <title>Load FMS images from IODP-USIO logging database</title>
      <para>
        The Integrated Ocean Drilling Program, United States
        Implementing Organization provides the logging database
        accessing service described in the <ulink
        url="http://brg.ldeo.columbia.edu/services/">webpage</ulink>.
        The service serves not only numerical data but also some
        <ulink
            url="http://www.ldeo.columbia.edu/BRG/ODP/LOGGING/TOOLS/fms.html">Formation
        MicroScanner (FMS)</ulink> represented in image form stored in
        GIF format.
      </para>

      <para>
        To load FMS images from the IODP-USIO logging database, select
        the "IODP" meun item from the "File" menu and then select
        "Show IODP lists...". Then clicking on the "Logging DB" tab in
        the popup window as shown in the following figure.

        <figure>
          <title>Logging DB tab in IODP tables window</title>
          <graphic fileref="images/iodp-loggingdb.png" />
        </figure>
      </para>

      <para>
        Then depending on where do you run the program, you can choose
        to access the on-ship version or the Internet version of the
        service. On-ship version will use the service provider URL
        "<ulink
        url="http://load.ship.iodp.tamu.edu/services/">http://loa.ship.iodp.tamu.edu/services/</ulink>"
        and the Internet
        version will use the service provider URL
        "<ulink
        url="http://brg.ldeo.columbia.edu/services/">http://brg.ldeo.columbia.edu/</ulink>". Once
        the service provider is
        selected, the available site and tool options will be
        downloaded and populated in the selectable combobox
        options. Or you can also type in interested site and tool and
        then click on the "Search" button to search for available
        data. The search result will be shown in the table rows
        below. You can use mouse to highlight multiple rows and click
        on the "Load selected data files" button to download and load
        the data/image files.
      </para>

      <para>
        For FMS images, since the depth and length information is not
        directly available. Corelyzer will attempt to load these
        images by guessing from their file name. For example a FMS
        image file named "306-642E_p2_D_372_442.gif" will be parsed
        and implies that the FMS image will contain data from 372 to
        442 meters. Corelyzer will use these 2 values to determine the
        depth and length of the interval of interest. But users should
        be aware that the FMS images are not cropped to the exact
        range, and there are white space form borders around the
        image, so the estimatation may not be accurate. If you want
        further finer adjustment could be adjusted in the images'
        properties dialog.
      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/LoadFromLoggingDB.mov">link
        online (size: 6MB in 1920x1200 resolution)</ulink>.
      </para>
    </sect1>

  </chapter>

  <chapter>
    <title>Load and Plot Numerical Log Data</title>

    <sect1>
      <title>Native Corelyzer XML Format Dataset Files</title>

      <para>
        Corelyzer loads data using the Corelyzer
        data XML schema (see appendix). A Corelyzer XML format datset
        file can contain multiple fields in a single file. Data
        files can be loaded at anytime during the execution of the
        program. To do so you will need to choose the menu item under
        "File -> Open Dataset Files" and a file selection dialog will
        appear. Corelyzer data files are in XML and properly have a .xml
        extension appended to them.
      </para>

      <para>
        Once a data file is selected, the Corelyzer application will
        process the data and then update the Dataset and Fields list
        boxes (click on the "Local" label in "My Core Repository" to
        show the lists). If you load up multiple data files, you can
        click on a dataset to view what fields were retrieved from the
        data file.
      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/6.1-LoadNativeData.mov">link
        online (size: 868KB)</ulink>.
      </para>

    </sect1>

    <sect1>
      <title>Use Quick Data Import</title>
      <para>
        In many cases, numerical data are a list of depth-value pairs
        for a single property. Use the "Quick Data Import" function,
        you can import data files that can be easily edited or
        generated by external programs like spreadsheet or even raw
        text data files generated by multiple sensor core loggers.

        The "Quick Data Import" function will accept plain text files
        that follows the format described below.
      </para>

      <para>
        The plain text file should be in tsv (Tab-Separated-Values) or
        csv (Comma-Separated-Values) formats (filename ended with .csv
        or .tsv). The first line of the file will describe the meaning
        of the values and its contents will also be used for data
        field labels. The rest of the file should be one depth with
        multiple values per line. And example .tsv plain text file
        might look like this (values separated by tabs):
        
        <programlisting>
MyDepth	Cr	Mg
m	mg	ion
0.1	0.1	0.4
0.2	0.3	3.2
0.3	0.5	-2.9
0.4	3.2	4.22
0.5	-2.1	-2.48
0.6	4.7	-1.90
0.7	-6.2	7.2
0.8	1.33	5.0
0.9	4.23	2.2
1.0	5.0	-1.0          
        </programlisting>

      </para>

      <para>
        To use "Quick Data Import", select the menu item from the
        "File" menu. Corelyzer will popup a file selection dialog to
        select the text file in the format described above.
      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/6.2-LoadDataQuick.mov">link
        online (size: 665KB)</ulink>.
      </para>

    </sect1>

    <sect1>
      <title>Use Custom Data Import</title>
      <para>
        In the case your data file is not in Corelyzer dataset XML
        schema yet, you can use the “Custom Data Import” feature under
        “File” menu to specify few parameters and have the program to
        convert
        your data file into Corelyzer dataset XML format. A user can
        convert a plain text tabular data file or a Geotek generated
        data (after pre-processing and data cleaning) to Corelyzer XML
        data format and directly imported into Corelyzer working session.
      </para>

      <para>
        Import parameters:
        <itemizedlist>
          <listitem>
            <para>
              File name: Original input file name. Use "File..." button
              to select your input file.
            </para>
          </listitem>

          <listitem>
            <para>
              Field Separator:
              Input what is used to separate each fields in the input
              file. Commonly used separator might be comma(,) for CSV
              file. Or Tab(type in \t) delimited file.
            </para>
          </listitem>

          <listitem>
            <para>
              Section Prefix:
              The prefix used for naming each section
            </para>
          </listitem>

          <listitem>
            <para>
              Start Line Number:
              In the input file, the starting line number of data
              values, starting from 1.

            </para>
          </listitem>

          <listitem>
            <para>
              End Line Number:
              In the input file, the ending line number of data values

            </para>
          </listitem>

          <listitem>
            <para>
              Fields Label Line Number:
              What is the line number for labels of each value in
              columns.

            </para>
          </listitem>

          <listitem>
            <para>
              Unit Label Line Number:
              What is the line number for units of each value in columns. 
              If there is no such line, just input the same line
              number as "Field Label Line Number"

            </para>
          </listitem>

          <listitem>
            <para>
              Name Column Number:
              Which column field should be picked used as the name of
              section.

              The final section name will be composed with "Section
              Prefix" and "Name Column Number".
              A simple comma separated expression is allowed to
              compose the section name.

            </para>
          </listitem>

          <listitem>
            <para>
              Depth Column Number:
              Which column will be treated as depth values. Column
              index starts with 1.
            </para>
          </listitem>

          <listitem>
            <para>
              Select Value Columns:
              From previous inputs, the field labels will be
              identified. Then you can check which fields do you want
              to select to the final dataset file.
            </para>
          </listitem>

        </itemizedlist>
      </para>
      
      <sect2>
        <title>A step-by-step walkthrough example</title>
        <para>
          Next is a step by step walkthrough example. The example source
          data file is downloaded from <ulink
          url="http://iodp.ldeo.columbia.edu/DATA/">IODP Log database
          at Lamont-Doherty Earth Observatory, Columbia
          University</ulink>. The data file used in
          this example is <ulink url="attachments/763B-ngt.dat">763B-ngt.dat</ulink>. The
          resulting Corelyzer dataset file is <ulink
          url="attachments/764B-ngt.xml">output_data.xml</ulink>.
        </para>

        <para>
          Select the "Custom Data Import" from the "File" menu.

          <figure>
            <title>Select "Custom Data Import"</title>
            <graphic fileref="images/dataimport-1.png" />
          </figure>
        </para>

        <para>
          The selected file will be loaded into "Plain Text Data
          Import" dialog. The upper half of the dialog shows different
          data format parameters in tabs. The lower half shows the
          content of the text file with line number attached to the
          beginning of each line.
        </para>

        <para>
          In the "File Info" tab, the selected file will be shown and
          you have to select from one of the available separator
          (comma, tab or space). In the this example, tab separator is
          selected.

          <figure>
            <title>Data import - file info</title>
            <graphic fileref="images/dataimport-2.png" />
          </figure>
        </para>

        <para>
          Because some text files will have certain number of comments
          lines in the header to describe the data file. In the "Data
          Range" tab, you can specify the actual data line
          range. Notice that the first number in each in the lower
          "File Content" panel shows the line number starting from
          one. In this example, the actual data starts from 6th line
          till the very end of the file (line 1586). In some
          equipments, bad or invalid values will be recorded during
          data acquisition with some fixed numbers like -999.99. 
          If you want to ignore these bad values,
          check the "Ignore some bad values?" checkbox and type in the
          designated value.

          <figure>
            <title>Data range tab</title>
            <graphic fileref="images/dataimport-3.png" />
          </figure>
        </para>

        <para>
          Next, you need to specify the lines showing the labels for
          fields and units. If the data file does not have the unit
          label line, just select the same line as the field label. In
          this example 5th line shows the labels for data fields.

          <figure>
            <title>Field and Unit Labels</title>
            <graphic fileref="images/dataimport-4.png" />
          </figure>
        </para>

        <para>
          Next, depth information parameters have to be specified. You
          have to specify which column means depth. In this example,
          the depth is in the first column.
        </para>

        <para>
          In the "Depth Mode" selection, you can select from either
          "Section Depth" or "Accumulated Depth". "Section Depth" means
          the depth values are measured from the beginning of each
          section that the data are acquired from. "Accumulated Depth"
          means the depth is measured from the bottom of the sea/lake
          floor.
        </para>

        <para>
          Because internally Corelyzer arranges depth values into
          sections, it in one way fits how certain parties obtain the
          data from sections of cores. In the other way, it helps
          renderning performance. So if the "Customize Section Name"
          is not checked, the data will be put into sections suffixed
          with section numbers automatically. If your data files has
          section information embedded (like data files from LacCore
          repository), or you have your own section naming convension,
          you can customize your section names with "Section Prefix"
          and "Name Column Number".
        </para>

        <para>
          For example, if you have a data file looks like this:

          <programlisting>
Geotek MSCL Version 3.0 - GLAD4-HST03-1A.OUT created at 12:37:15 on 08-21-2003.,,,,,,,,,
...
SB DEPTH  ,SECT NUM  ,SECT DEPTH,ST        ,PWAmp     ,PWVel     ,Den1      ,MS1       ,Imp       ,FP        
m         ,          ,cm        ,cm        ,          ,m/s       ,gm/cc     ,SI        ,          ,          
0.06,1H-1,6,6.605,50,130.9347,1.2618,82.5908,165.2135,0.8632
0.07,1H-1,7,6.605,50,131.1427,1.1873,89.2873,155.7109,0.9064
0.08,1H-1,8,6.605,50,130.9736,1.2688,95.0648,166.1739,0.8592
...
2.41,1H-2,92,6.604,50,130.9019,1.5467,152.7585,202.4669,0.698
2.42,1H-2,93,6.604,50,131.1098,1.5654,152.2331,205.2369,0.6871
2.43,1H-2,94,6.604,50,130.9408,1.6787,148.03,219.8154,0.6214
...
4.41,2H-2,20,6.605,50,5436.214,1.9546,271.8012,10625.5,0.4614
4.42,2H-2,21,6.605,50,130.9477,2.0751,287.0326,271.7301,0.3915
4.43,2H-2,22,6.606,50,130.9545,1.9434,300.9818,254.4949,0.4679
...
          </programlisting>
          
          Each section's name can be composed by prefix
          "GLAD4-HST03-1A" with suffix from the string in the "SECT
          NUM" column. So check the "Customize Section Name" checkbox
          with "GLAD4-HST03-1A" section prefix and the number "2" in
          the "Name Column Number" will give the sections named
          "GLAD4-HST03-1A-1H-1", "GLAD4-HST03-1A-1H-2" and
          "GLAD4-HST03-1A-2H-2". Also notice that you need to use
          values from multiple columns to compose your full section
          name, you can also fill in string like, "2,-,4,-,7" to have
          values from multiple columns in the full section name
          separated by "-".

          <figure>
            <title>Depth setup</title>
            <graphic fileref="images/dataimport-5.png" />
          </figure>
        </para>

        <para>
          In the "Fields Selection" tab, you then can select the data
          field columns that you want to import into Corelyzer.

          <figure>
            <title>Fields selection</title>
            <graphic fileref="images/dataimport-6.png" />
          </figure>
        </para>

        <para>
          The data import process will then ask you to save the
          converted file (in Corelyzer native xml format) to your disk
          for future use. After saving, the data will be loaded into
          current Corelyzer session.
          
          <figure>
            <title>Save converted file</title>
            <graphic fileref="images/dataimport-7.png" />
          </figure>
        </para>

        <para>
          Notice that just like core images, data plots have to belong
          to a track grouping. So if you haven't have a track created
          or you want to have dedicated track grouping for data graph
          plots, create a new track from the "File" menu.

          <figure>
            <title>Create a track for data graph plot</title>
            <graphic fileref="images/dataimport-8.png"/>
          </figure>
        </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/6.3-LoadCustomData.mov">link
        online (size: 6.7MB)</ulink>.
      </para>

      </sect2>

    </sect1>

    <sect1>
      <title>Download from IODP-USIO logging database</title>
      <para>
        The Integrated Ocean Drilling Program, United States
        Implementing Organization provides the logging database
        accessing service described in the <ulink
        url="http://brg.ldeo.columbia.edu/services/">webpage</ulink>.
      </para>

      <para>
        To load logging data from the IODP-USIO logging database, select
        the "IODP" meun item from the "File" menu and then select
        "Show IODP lists...". Then clicking on the "Logging DB" tab in
        the popup window as shown in the following figure.

        <figure>
          <title>Logging DB tab in IODP tables window</title>
          <graphic fileref="images/iodp-loggingdb.png" />
        </figure>
      </para>

      <para>
        Then depending on where do you run the program, you can choose
        to access the on-ship version or the Internet version of the
        service. On-ship version will use the service provider URL
        "<ulink
        url="http://load.ship.iodp.tamu.edu/services/">http://loa.ship.iodp.tamu.edu/services/</ulink>"
        and the Internet
        version will use the service provider URL
        "<ulink
        url="http://brg.ldeo.columbia.edu/">http://brg.ldeo.columbia.edu/</ulink>". Once
        the service provider is
        selected, the available site and tool options will be
        downloaded and populated in the selectable combobox
        options. Or you can also type in interested site and tool and
        then click on the "Search" button to search for available
        data. The search result will be shown in the table rows
        below. You can use mouse to highlight multiple rows and click
        on the "Load selected data files" button to download, convert
        and load the data files. Then follow the "Plot dataset graph"
        steps to show data plots of these loaded data files.
      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/LoadFromLoggingDB.mov">link
        online (size: 6MB in 1920x1200 resolution)</ulink>.
      </para>

    </sect1>

    <sect1 id="sec.graphing">
      <title>Plot dataset graph</title>
      <para>
        If you have dataset files loaded and tracks created, your main
        iCores control window should resemble that pictured below. To plot data,
		right-click on the desired data file and choose "Graph...". This opens the Graph dialog.

        <figure>
          <title>Main window with dataset loaded</title>
          <graphic fileref="images/dataplot-1.png" />
        </figure>
		
		Alternately, you can right-click a section image in the visualization canvas and choose
		"Graph..." from the menu as seen below:
		
		<figure>
          <title>Opening graph dialog by right-clicking section image</title>
          <graphic fileref="images/dataplot-1.1.png" />
        </figure>
		
		<figure>
          <title>Graph dialog</title>
          <graphic fileref="images/dataplot-2.png" />
        </figure>

        Select one or more sections and the available data
        fields will be shown in the "Properties fields" list. Checking a
		field's checkbox in the "Show" column will plot that data in the main
		visualization area. To change the color of plotted data, click the field's
		color cell and select from the resulting palette. Corelyzer attempts to use
		the same color across all sections for fields of the same name. The "Data
		Range" column indicates the min/max range of data across all selected sections.
	</para>
	
	<para>
		Other controls:
	</para>
	<para>
        <itemizedlist>
          <listitem><para>Graph type: Change apperance of graph (points, lines, etc.).</para></listitem>
          <listitem><para>Collapse graphs: 	When checked, all selected data fields will be
			plotted on a single coordinate plane for each section (see example below).</para></listitem>
          <listitem><para>Scale min/max: Change the minimum and maximum range of the coordinate plane.</para></listitem>
          <listitem><para>Excluded values: When populated, don't graph datapoints that fall within
				the excluded range. One or both fields can be filled. When multiple sections are
				selected, the broadest exclusion range will be displayed (that is, the minimum of
				minimums and maximum of maximums).</para></listitem>
		  <listitem><para>Leave gaps at excluded values: When checked, the Line and Line &amp; Points graph
			types will not draw a line connecting points with excluded values between them.</para></listitem>
        </itemizedlist>

		<figure>
          <title>Graph plot with "collapsed" graphs</title>
          <graphic fileref="images/dataplot-3.png" />
        </figure>
	</para>

	<para>
		Keyboard Commands:
	</para>
	<para>
		In some cases, you may want to expand the vertical size of
        graph plots, e.g. those with a large depth range. To increase
		or decrease the graph (vertical) scale, you
        can first click on the visualization canvas area, and then
        press '[' or ']' to decrease or increase the graph's size
        on-screen.
		
        A screen capture video of these actions can be found in this
        <ulink url="http://www.corewall.org/documents/movies/6.4-GraphParameters.mov">link
        online (size: 2.0MB)</ulink>
	</para>
    </sect1>
  </chapter>


  <chapter>
    <title>Interactions</title>

    <sect1>
      <title>Interaction Scheme</title>
      <para>
        The basic interaction scheme is a mouse-based interaction. The
        application is best run using a two-button mouse with a scroll
        wheel. In the most recent version of Corelyzer, the mouse clicks
        and events are context sensitive. This means, depending on what
        your mouse pointing to, the response of the application to mouse
        events can vary.
      </para>

      <sect2>
        <title>Panning</title>
        <para>
          To automatically begin panning using the Click-and-drag style,
          first left-click on the visualization window, making sure not to
          click on any objects (e.g. core section images, graphs,
          annotation markers, etc.)
        </para>

        <para>
          If you successfully clicked and are in the panning-mode, then
          the mouse pointer should change. In Windows, it will likely
          change to a four-direction pointer. On Mac OS X, it will
          change from a black mouse to a white mouse cursor. To pan,
          keep holding down the left mouse button and drag the mouse to
          move the view of the scene.
        </para>
      </sect2>

      <sect2>
        <title>Zooming</title>
        <para>
          If you have a mouse wheel, zooming is as easy as scrolling the
          wheel back to zoom out and forward to zoom in. Assuming a
          particular area is of interest and you want to zoom in on it,
          simply point at that area of interest and use the mouse wheel to
          zoom in. The area will stay in the same place as the scene
          changes in scale. Similarly, you can zoom out to see more of the
          context that surrounds a particular area.
        </para>

        <para>
          You can also use keyboard for navigation in Corelyzer. You
          can use the four-direction arrow key to pan around the main
          visualization area. To zoom in and out around the mouse
          cursor position, you can press the "+" and "-" keys. If you
          want to jump to a certain depth directly, first click on the
          main visualization area and then press the "j" key to bring
          up the "Jump to..." dialog. Input the depth in meter and the
          main visualization area will jump to designated depth
          directly.

          <figure>
            <title>Jump to depth dialog</title>
            <graphic fileref="images/jumpto.png" />
          </figure>

        </para>
      </sect2>

      <sect2>
        <title>Sliding a section</title>
        <para>
          To slide a section image, first left-click on the section image,
          the image will be highlighted by a yellow bounding box. If you
          successfully do this, the mouse pointer will change to a hand
          pointer. The core section image will also be brought to the
          front of the other images. This is noticeable if any of the core
          section images overlap. At this point you can slide the section
          image left or right by moving your mouse left or right with Alt
          key pressed at the same time.
        </para>
      </sect2>

      <sect2>
        <title>Sliding a track</title>
        <para>
          A track can be slid vertically. To do this, first select a core
          section image, and then hold down the Shift key. The mouse
          pointer will remain looking like a hand cursor. Move the mouse
          up or down and the track will be moved in the direction of the
          mouse motion.
        </para>

        <para>
          NOTE: Corelyzer loads all images and tracks at the origin. It is
          recommended to slide a track away so that new images on a
          different track do not overlap an existing track.
        </para>
      </sect2>
    </sect1>

    <sect1>
      <title>Manipulating Tracks and Sections</title>
      <para>
		Right-clicking on a section image opens a menu with several options to modify that
		section's (or its parent track's) appearance, properties and positioning relative
		to other sections within its track.
		
         <figure>
           <title>Section context menu</title>
           <graphic fileref="images/sectionMenu.png" />
         </figure>
	  </para>

		<sect2><title>Graph...</title>
		  <para>
			Opens the Graph dialog - <link linkend="sec.graphing">details here</link>.
		  </para>
		</sect2>

		<sect2><title>Split...</title>
		  <para>
			Opens the Split dialog, where you can divide the selected section into separate sections.
		  </para>
		</sect2>

		<sect2><title>Properties...</title>
		  <para>
			Opens the Properties dialog, where you can modify traits (e.g. DPI, rotation, visible interval) 
			of the selected section.
		  </para>
		</sect2>

		<sect2><title>Delete...</title>
		  <para>
			Removes this section from the current session.
		  </para>
		</sect2>

		<sect2><title>Stagger Sections</title>
		  <para>
			Moves every other section in the track up by the width of the track. If a
			track is staggered, a checkmark will appear by the "Stagger Sections..." menu option; select
			again to un-stagger.
		
			 <figure>
			   <title>Staggering sections</title>
			   <graphic fileref="images/stagger.png" />
			 </figure>
		  </para>
		</sect2>
		
		<sect2><title>Trim Sections...</title>
			<para>
				Opens the Trim dialog, which allows you to "trim" from the top or bottom of all section images
				in the track. Trimming modifies sections' Visible Intervals as seen in the Properties dialog
				This is most useful for removing extraneous imagery such as color cards or core catchers.
			</para>
		</sect2>
	
		<sect2><title>Stack Sections</title>
			Positions all sections in the selected track end-to-end with no gaps between.
			
			<figure>
				<title>Stacking sections</title>
				<graphic fileref="images/stack.png" />
			</figure>
		</sect2>

    </sect1>

  </chapter>

  <chapter>
    <title>Annotation</title>
    <para>
      Annotations are currently shown using a marker along the top of
      a core. The marker is a simple interactive visual to indicate
      that an annotation exists. Different markers can mean different
      types of annotations. Annotations types will be added as
      development continues.

      <figure>
        <title>Annotations for core images</title>
        <graphic fileref="images/annotations.png" />
      </figure>
    </para>

    <sect1>
      <title>Creating new annotations</title>
      <para>
        Currently, text and image annotations are
        supported. Annotations come in the form of HTML and property
        list XML files.
      </para>

      <para>
        First an image must be loaded. A user can then select "Create
        annotation mode" to start creating annotations.
        <figure>
          <title>Select create annotation mode</title>
          <graphic fileref="images/annotations-1.png" />
        </figure>
      </para>

      <para>
        Once you are in creating annotation mode, you can create a
        region of interest rectangle by pressing-and-dragging to show
        interested region. A dialog asking for which kind of
        annotation you are creating will show up once you release the
        the mouse button. Currently Corelyzer supports the following
        types of annotations.

        <itemizedlist>
          <listitem><para>Freefrom: a threaded discussion freeform annotation.</para></listitem>
          <listitem><para>Clast: a structured annotation which keeps
          track of clastology information.</para></listitem>
          <listitem><para>Sample Request: a front-end annotation for
          sample requests.</para></listitem>
          <listitem><para>Property Values: a generic property-value
          pairs annotation. Default properties is defined in the
          dictionary file specified in the preferences panel.</para></listitem>
        </itemizedlist>

        <figure>
          <title>Select annotation type</title>
          <graphic fileref="images/annotations-2.png" />
        </figure>

      </para>
    </sect1>

    <sect1>
      <title>Reviewing and editing existing annotations</title>
      <para>
        After an annotation is created, it can be edited in the
        future. To edit an annotation, or review it, a user simply
        clicks on an annotation marker. The same dialog used when
        creating an annotation will display.
      </para>

      <para>
        Currently, the comments will be
        attached into a discussion thread-like display in a freeform
        annotation. By clicking the tool buttons at the top of the
        editing area of annotation window, the user can do simple HTML
        formatting and insert images and attachment files with URLs or
        by selecting files from local hard disk.

        <figure>
          <title>Review and edit a freeform annotation</title>
          <graphic fileref="images/annotations-3.png" />
        </figure>
      </para>

      <para>
        Any time after the marker is created, the user can change to
        marker manipulation mode by clicking icon at the toolbox in the
        upper left screen. Next, select the marker icon and then by
        click-and-drag the green box to change the region of interest.

        <figure>
          <title>Modify annotation marker mode</title>
          <graphic fileref="images/annotations-4.png" />
        </figure>

        <figure>
          <title>Modify region of interest and marker position</title>
          <graphic fileref="images/annotations-5.png" />
        </figure>

      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/8.1-CreateModAnnotation.mov">link
        online (size: 14.0MB)</ulink>.
      </para>

    </sect1>

    <sect1>
      <title>Measuring Mode</title>
      <para>
        Switch to measuring mode by click the measurement icon in the
        toolbox at the upper left corner. To measure, click two points
        on the visualization screen, the physical length measurement
        will be calculated and saved to measuring history. The last
        value will also be copied to system’s clipboard so you can
        easily paste to other applications or the annotation.

        <figure>
          <title>Enable measure mode</title>
          <graphic fileref="images/measure-1.png" />
        </figure>

        <figure>
          <title>Show measuring history</title>
          <graphic fileref="images/measure-2.png" />
        </figure>

        <figure>
          <title>Measure on images</title>
          <graphic fileref="images/measure-3.png" />
        </figure>
      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/8.3-Measure.move">link
        online (size: 5.7MB)</ulink>.
      </para>

    </sect1>

  </chapter>

  <chapter>
    <title>Save and Load Sessions</title>
    <para>
      You can save your current working session by selecting “Save
      Session As ...” under “File” menu. This function will save all
      the information that you loaded into the scene into a XML-based
      “CML” file. CML file schema description can be found in <ulink
      url="http://instaar.colorado.edu/%7Ejenkinsc/dbseabed/corewall/CmlXml_Syntax_1.pdf">here</ulink>.
    </para>

    <para>
      This file doesn’t save all the images and dataset
      files with it, it keeps track of where all the related files
      are located. You can later load everything back by selecting
      “Open a Session File” under the same “File” menu.
    </para>

    <para>
      The “cml” file is small, and if the resource you loaded into the
      scene are all downloaded from the Internet within Corelyzer,
      these resources’ URL will be kept and by passing just the “cml”
      file around, other people can load back the same session that
      you were working on.
    </para>

    <para>
      But if the resources you loaded in your working session are all
      files in your local hard disk, and you want to pass the working
      session to your colleague? Please use the “Export…” and
      “Import…” functions under “Core Archive” menu in the "File"
      menu. 

      The “Export…” function
      will pack all the resources along with a session “cml” file into
      a big compressed “Core ARchive”, a “.car” file. It will contain
      all the images, datasets, annotations and their attachments
      within. The other people can just use “Import…” to open it up
      and restore everything you were working on his/her screen.
    </para>

  </chapter>

  <chapter>
    <title>Corelyzer server and plugin clients</title>
    <para>
      Corelyzer server and plugin support was developed by Arun Rao,
      Yu-Chung "Julian" Chen and Sangyoon "James" Lee in 2006 for
      supporting ANDRILL MIS Project.
    </para>

    <sect1>
      <title>Server setup</title>
      <para>
        Before starting the server, a few things must be prepared.
        First, the machine will need to have the Java Runtime
        Environment (JRE) 1.5 or greater.  Second, a web-server must
        be running.  Third, configuration files will need to be made.
      </para>

      <para>
        Setting up the JRE and a web-server are beyond the scope of
        this document, but many resources are available on the Web to
        do so.
      </para>

      <para>
        The server program requires two files.  The first file
        contains the server settings and is specifically named
        “server-settings.txt”.  This file contains only four lines and
        are as follows:
      </para>

      <programlisting>
        &lt;the base web address for all annotation pages&gt;
	&lt;the directory where the annotations are placed in the server for access&gt;
	&lt;the directory where the annotations are backed-up to&gt;
	&lt;the last time that the server performed a backup&gt;
        &lt;"backenabled" or "backupdisabled" to enable or disable data  backups&gt;
      </programlisting>

      <para>
        Here is an example of that file:
      </para>

      <programlisting>
	http://131.193.77.222/~corewallDB/annotations
        /Users/corewallDB/Sites/annotations
        /Users/corewallDB/Sites/annotations
        1155613264194
        backupenabled
      </programlisting>

      <para>
        NOTE: The second last line should be 0 when first starting the
        server.  After which the server will automatically update that
        line every day.
      </para>

      <para>
        The second file needed by the server is named “users.txt.”
        This file contains a listing of tuples that identifies a
        unique user.  The tuple is (user name, real name,
        password). The first three lines of the file describe the user
        name, real name and password for the administrator of the
        server. 
      </para>

      <para>
        NOTE: It should be stated that permissions to this file should
        be setup so that only the administrator has read and write
        permissions to the file.          
      </para>

      <para>
        An example of the file can be as follows:
      </para>

      <programlisting>
admin
administrator
admin
arun
Arun G. Rao
melodr@mat1c
jason
Jason Leigh
th3bo55
      </programlisting>

      <para>
        Anytime a new user is going to be created, it is as easy as
        adding the user name, real name and password to the end of the
        file.
      </para>

    </sect1>

    <sect1>
      <title>Running the server</title>
      <para>
        To run the server you will need to perform the following
        command:
      </para>

      <programlisting>
        java –cp CorelyzerSessionServer.jar corelyzer.plugin.andrill.CorelyzerSessionServer
      </programlisting>

      <para>
        After running that command you can logout of the server
        machine and the server program will continue to run.  To
        properly shutdown the server, use the “server-shutdown”
        command available to the admin client.
      </para>
    </sect1>

    <sect1>
      <title>Running the administration client</title>
      <para>
        You can run the admin client from anywhere.  Simply have the
        JRE 1.5 or greater and keep a copy of the
        CorelyzerSessionServer.jar file.  To run the client simply run
        the command:
      </para>

      <programlisting>
	java –cp CorelyzerSessionServer.jar corelyzer.plugin.andrill.CorelyzerSessionAdminClient 192.168.1.1
      </programlisting>

      <para>
        Where you would replace the I.P. 192.168.1.1 with the proper
        hostname or IP of the machine running the server.  Following
        is a detailed look at the set of administrator commands.
      </para>
    </sect1>

    <sect1>
      <title>Administrator commands</title>
      <para>
        <itemizedlist>

          <listitem>
            <para>
              Command: "new-section". Arguments: "Section name", "Starting depth" in
              meters" and "Length in meters".
            </para>

            <para>
              Purpose: The main purpose of the command is to notify to
              the server that a new core sections exists.  Effectively
              creating empty slots of split-core image and whole-core
              image entries.  This is also used so that when a new
              data comes in, there are correlations to depth intervals
              and section names.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "new-missing-section". Arguments: "Section name
              prefix", "Starting depth in meters" and "Length in meters".
            </para>

            <para>
              Purpose: The main purpose of the command is to notify to
              the server that a new missing core sections exists.
              Effectively creating empty slots of split-core image and
              whole-core image entries.  Using command like
              “new-missing-section and001 0.0 1.5” will create a new
              section with section name “and001_0.0-1.5-missing”.
            </para>
          </listitem>
          <listitem>
            <para>
              Command: "new-split-core". Arguments: "The URL to the
              image file", "The name of the section the image comes
              from", "The DPI (dots-per-inch) of the image in X
              (horizontal) direction" and (Optional) "The DPI of the
              image in Y (vertical) direction"
            </para>

            <para>
              Purpose: The purpose of this command is to let the
              server know the web address of the split-core image that
              was created from the core section.  This will let the
              server then notify the clients that the image exists and
              is available for download and viewing in Corelyzer.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "new-missing-split-core". Arguments: "The section name of missing split core"
            </para>

            <para>
              Purpose: The purpose of this command is to assign a
              empty split core image to a core section due to there
              might be no split core image available but users still
              need to access the data and whole core images. The
              missing section name convention will be like
              &lt;prefix&gt;_&lt;start_depth&gt;-&lt;end_depth&gt;, eg:
              “and001_186.7-187.5”.
            </para>
          </listitem>
          <listitem>
            <para>
              Command: "new-whole-core". Arguments: "The URL to the
              image file", "The name of the section the image comes
              from" and "The DPI (dots-per-inch) of the image".

            </para>
            <para>
              Purpose: The purpose of this command is to let the
              server know the web address of the whole-core image that
              was created from the core section.  This will let the
              server then notify the clients that the image exists and
              is available for download and viewing in Corelyzer.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "new-dataset". Arguments: "Data file to parse"
              and "The name of the dataset to append/overwrite".
            </para>

            <para>
              Purpose: This command will parse a tab-delimited data
              file and feed the server new data tables.  The tab
              delimited data file must follow the formatting exampled
              in Appendix B.  This command will retrieve a listing of
              sections to use the depth and length of the sections to
              determine how to partition the data file into tables.  
            </para>
            <para>
              Once the tables are created the tables are sent to the
              server and stored in a file with the following name
              convention:
            </para>
            
            <programlisting>
              dataset.&lt;section name&gt;.&lt;dataset name&gt;.tab
            </programlisting>

            <para>
              If the dataset name does not exist in the server, it
              will be created automatically.  If the name exists then
              the files created on the server will automatically be
              appended.
            </para>

            <para>
              NOTE: Existing files will be overwritten automatically!
              If this is an undesired effect, please make sure that
              there are no rows that contain depths of sections that
              would previously had a table made for them for the
              dataset.  If you are only appending to a single
              tab-delimited file without changing previous rows then
              the overwrite will effectively be doing nothing for
              previously created tables.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-sections". Arguments: None
            </para>

            <para>
              Purpose: The purpose of this command is to list the
              existing sections known to the server.  Returned is a
              listing of section names, their depth and length in
              meters.  The output is displayed to the command-line.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-datasets". Arugments: None
            </para>

            <para>
              Purpose: The purpose of this command is to display
              datasets known to the server.  Displayed are the names
              of the datasets followed by the attributes in the
              dataset and their respective minimum and maximum values
              within the whole dataset.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-tables". Arguments: "The name of the
              dataset"
            </para>

            <para>
              Purpose: This command will display a listing of tables
              within a given dataset.  This is useful if you do not
              know if a given section is covered by a dataset because
              the names of the tables are the names of the sections.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-table-data". Arguments: "The name of the
              dataset" and "The name of the section/table to view"
            </para>

            <para>
              Purpose: This command will display the data of a table
              from a given dataset.  The data is displayed in a
              tab-delimited form with the first line as the header
              followed by lines of numerical values.  Table cells that
              are invalid will appear blank.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "run-backup". Arguments:	None
            </para>

            <para>
              Purpose: The server runs backups automatically if the
              last backup has occurred more than 24 hours ago.  This
              command forces the current day’s backup to occur.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "logout". Arguments: None
            </para>

            <para>
              Purpose: This command allows the administrator to logout
              and ends the client program.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "server-shutdown". Arguments: None
            </para>

            <para>
              Purpose: This command allows the server to properly
              shutdown.
            </para>
          </listitem>

        </itemizedlist>

      </para>
    </sect1>

    <sect1>
      <title>Admin commands reference table</title>
      <table>
        <title>Commands reference table</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Command</entry>
              <entry>Arguments</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>new-section</entry>
              <entry>section_name> depth_in_mbsf length_in_meter</entry>
            </row>

            <row>
              <entry>new-split-core</entry>
              <entry>image_url section_name image_dpi</entry>
            </row>

            <row>
              <entry>new-whole-core</entry>
              <entry>image_url section_name image_dpi</entry>
            </row>

            <row>
              <entry>new-dataset</entry>
              <entry>dataset_file dataset_name</entry>
            </row>

            <row>
              <entry>list-sections</entry>
              <entry></entry>
            </row>

            <row>
              <entry>list-datasets</entry>
              <entry></entry>
            </row>

            <row>
              <entry>list-tables</entry>
              <entry>dataset_name</entry>
            </row>

            <row>
              <entry>list-table-data</entry>
              <entry>dataset_name table_name</entry>
            </row>

            <row>
              <entry>run-backup</entry>
              <entry></entry>
            </row>

            <row>
              <entry>run-script</entry>
              <entry>script_file</entry>
            </row>

            <row>
              <entry>logout</entry>
              <entry></entry>
            </row>

            <row>
              <entry>server-shutdown</entry>
              <entry></entry>
            </row>

          </tbody>
        </tgroup>
      </table>
    </sect1>

    <sect1>
      <title>Client plugin in Corelyzer</title>
      <para>
        In the client side, a client plugin is provided in Corelyzer
        software. To activate the client user interface, select
        "Collaborative Corelyzer" from the "Plugins" menu.

        <figure>
          <title>Activate client plugin</title>
          <graphic fileref="images/session-1.png" />
        </figure>
      </para>

      <para>
        To connect to the session server, you can either select or
        type in the
        server name from the drop down menu on the top of the client
        plugin user interface and click on the "Connect" button. The
        interface then will prompt to ask for the user name and
        password for accessing the server.

        <figure>
          <title>Connect to session server</title>
          <graphic fileref="images/session-2.png"/>
        </figure>
      </para>

      <para>
        After logging in, the user interface will display available
        split core and whole core section images and numerical
        datasets for plotting. To load the available images, click on
        the checkboxes in each section row. The client plugin will
        start downloading and loading the section images in the
        background and show in the main visualization canvas.

        <figure>
          <title>Main session client plugin user interface</title>
          <graphic fileref="images/session-3.png" />
        </figure>
      </para>

    </sect1>

    <sect1>
      <title>Example dataset file</title>
      <para>
	The basic formatting of this file is simple.  The first row
        will contain unique column headers that are tab-delimited
        (i.e. separated by tabs).  The first column of the data, by
        default, is assumed to be the column that contains the depth
        reference for the data in the row.  Every row of data is also
        tab-delimited, and must contain the same number of tabs as the
        header row; in order to positively determine which data value
        belongs to which column. Microsoft® Excel can export a
        worksheet as a tab-delimited file in the same way.  An empty
        entry is considered to be two consecutive tabs, and will be
        dealt with properly.  Any data that appears to be invalid
        should be deleted in your spreadsheet program of choice to
        create an empty entry.
      </para>

      <programlisting>
Depth [m]	Porosity [% vol]	WBD [g/ccm]	Sus [units]
12.250	0.454	1.937	241.46
12.270			245.60
12.290	0.420	1.995	244.68
12.310	0.408	2.015	257.45
12.330	0.365	2.087	280.15
12.350	0.387	2.050	305.97
12.370	0.383	2.057	390.86
12.390	0.434	1.971	620.38
12.410	0.282	2.226	762.53
12.430	0.376	2.069	644.55
12.450	0.441	1.959	435.98	
      </programlisting>

      <para>
        NOTE: In this example you can see that on the third row there
        are two blank entries for both Porosity and WBD columns.  
      </para>
    </sect1>

    <sect1>
      <title>Handy scripts</title>
      <table>
        <title>Handy scripts</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Script name</entry>
              <entry>Function description</entry>
            </row>
          </thead>

          <tbody>

            <row>
              <entry>startserver.sh</entry>
              <entry>Server startup script</entry>
            </row>

            <row>
              <entry>adminlogin.sh</entry>
              <entry>Interactive administrator client startup script</entry>
            </row>

            <row>
              <entry>import_img.cron</entry>
              <entry>Sample script that can be placed in crontab to import section image summary report</entry>
            </row>

            <row>
              <entry>import_data.cron</entry>
              <entry>Sample script that can be placed in crontab to import dataset summary report</entry>
            </row>

            <row>
              <entry>img_summ</entry>
              <entry>Section image summary report example file (tab separated fields in each line)</entry>
            </row>

            <row>
              <entry>CRP</entry>
              <entry>Dataset summary report example file. Notice that
              the data’s depth must be within the range of sections
              existed in server</entry>
            </row>

          </tbody>
        </tgroup>
      </table>
    </sect1>

    <sect1>
      <title>Some notes</title>
      <itemizedlist>
        <listitem>
          <para>
            Convert raw scanned image files from BMP or TIFF to JPEG
            files, to reduce file size and save some network
            transmission time.
          </para>
        </listitem>

        <listitem>
          <para>
            The server assume the splitcore images are in ‘vertical’
            orientation and it will tell clients to rotate them so
            images will be layout horizontal way.
          </para>
        </listitem>

        <listitem>
          <para>
            Before import the dataset, make sure the data are in the
            range of sections already available in the server.
          </para>
        </listitem>
      </itemizedlist>
    </sect1>

  </chapter>

  <chapter>
    <title>Fine tune with Correlator</title>

    <sect1>
      <title>Before start - Download Corrlator and Corelyzer</title>
      <para>
        You have to download and install Correlator and
        Corelyzer. The latest version of Correlator can be downloaded from
        <ulink
            url="http://sqlcore.geo.umn.edu/CoreWallDatabase/cwWiki/index.php/Correlator">here</ulink>, 
        and the latest version of Corelyzer can be downloaded from 
        <ulink url="http://www.evl.uic.edu/cavern/corewall/downloads.php">here</ulink>.
      </para>
    </sect1>

    <sect1>
      <title>Interaction flow</title>
    
      <para>
        In the following section, we will show step-by-step how to
        connect to Corelyzer from Correlator to use available core
        images assisting choosing tie points in creating affine tables.
      </para>

      <sect2>
        <title>Start Corelyzer</title>
        <para>
          Double click on the Corelyzer icon to start Corelyzer. You might
          want to properly setup the visualization area of Corelyzer if
          you do not want it overlaps with Correlator's data plot
          window. Please refer to Corelyzer Display Configuration
          section for setting up Corelyzer visualization area.
        </para>
      </sect2>

      <sect2>
        <title>Start Correlator</title>
        <para>
          Double click on the Correlator icon to start
          Correlator. Please refer to Correlator documentation for start
          using Correlator.
        </para>
      </sect2>

      <sect2>
        <title>Load log data tables and image list table</title>
        <para>
          Before using the fine tune function, you have to make sure you
          have loaded both the data table and the image table of the
          cores. Please refer to Correlator document on "How to load
          data files into Correlator Data Manager".
        </para>
        
        <para>
          In the following example, 3 data files (Bulk Density GRA) and
          a image list data file are loaded into Correlator's Data Manager.
        </para>
      
        <figure>
          <title>Example data and image list files are loaded in Data
          Manager in Correlator</title>
          <graphic fileref="images/finetune-1.png" />
        </figure>

        <figure>
          <title>The log data file format loaded in Correlator</title>
          <graphic fileref="images/finetune-2.png" />
        </figure>

        <figure>
        <title>The image list file format loaded in Correlator</title>
        <graphic fileref="images/finetune-3.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Load log data into Correlator plotting area</title>
        <para>
          Right click on the log data entries and select "Load" to load
          the data into the plotting area in the Correlator.
        </para>
      
        <figure>
          <title>Right click on the data entries and click on the "Load"
          to load the log data into the plotting area of
          Correlator</title>
          <graphic fileref="images/finetune-4.png" />
        </figure>

        <para>
          The data will be plotted in the Correlator window. In the
          following screenshot, it shows a 1920x1200 screen with
          Corelyzer showing in the left half and Correlator showing the
          right half with log data loaded and plotted.
        </para>
        <figure>
          <title>Side-by-side Corelyzer and Correlator with log data
          plotted</title>
          <graphic fileref="images/finetune-5.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Connect to Corelyzer from Correlator</title>
        <para>
          Click on the "Connect to Corelyzer" button on the Correlator
          command window as shown in the following screenshot.
        </para>
        <figure>
          <title>"Connect to Corelyzer" button in Correlator command
          window</title>
          <graphic fileref="images/finetune-6.png" />
        </figure>

        <para>
          A confirmation dialog will popup asking whether you want to
          unload previous loaded images in Corelyzer. Click on "YES"
          will unload previous tracks and images in Corelyzer.
        </para>

        <figure>
          <title>Confirmation of unload previously loaded images in
          Corelyzer</title>
          <graphic fileref="images/finetune-7.png" />
        </figure>

        <para>
          After successfully connected, if the user use the scrollbar in
          Correlator to change the viewing depth range, the view range
          will also be updated accordingly in the Corelyzer
          visualization area.
        </para>

      </sect2>

      <sect2>
        <title>Composite depth shifting with core images</title>
        <para>
          Core images will be loaded in the Corelyzer side, if the
          connection between Correlator and Corelyzer is established
          during choosing both 2 tie points (red and green points) in
          Correlator. A red horizontal line will appear in the
          Corelyzer as the reference tie depth.
        </para>

        <figure>
          <title>Creating 2 tie points in Correlator</title>
          <graphic fileref="images/finetune-8.png" />
        </figure>

        <para>
          Dragging the green tie point in Correlator like you always
          do, it will update/shift the core images accordingly like
          the data plots segments. You can use the core image texture
          for correlation reference.
        </para>

        <figure>
          <title>Adjusting tie points also updates core images</title>
            <graphic fileref="images/finetune-9.png" />
        </figure>

        <para>
          If you right click the (green) tie point and select the
          "Clear" option, the core images will be placed to their
          original position. After your adjustments, right click on
          the (green) tie point to choose adjustment option as
          described in Correlator
          document. The core images will be positioned using the
          result affine table. If you click on the "Undo To" button in
          the Correlator, the affine table will be restored and
          re-read by Corelyzer to shift core images according to the
          affine table.
        </para>

        <para>
          When you disconnect from Corelyzer, a dialog will popup in
          Corelyzer main window. By default selecting "YES" it will
          close all opened core images during the composite
          session. If you want to keep the arrangements setup on
          screen, you can save the session file as described in the
          "Save and Load Sessions".
        </para>
      </sect2>
      </sect1>
  </chapter>

  <chapter>
    <title>Frequently Asked Questions (FAQ)</title>
    
    <sect1>
      <title>How do I compare two cores?</title>
      <para>
        To compare 2 cores images or data side-by-side, you can
        arrange cores to be compared in different "tracks". To do
        that, first create and highlight a new track. Then load first
        batch of images to be compared using "Load images" item in the
        "File" menu. The second batch of core images can be loaded
        into another newly created track using similar steps. To
        arrange them side-by-side, use keyboard+mouse gesture
        "Shift-Drag" one track away from another in the vertical
        direction. If you need to move individual section along the
        depth direction, you can use "Alt-Drag" gesture to move
        sections to different depths.
      </para>
    </sect1>

    <sect1>
      <title>More question...</title>
      <para>
        More description...
      </para>
    </sect1>

  </chapter>

  <appendix>
    <title>Appendix</title>
    <sect1>
      <title>Why is the Image DPI Important?</title>
      <para>
        Corelyzer is a system that intends to bridge core imagery from multiple 
        sources and scale as time moves on and resolution improves. To do this, 
        the system scales all the images so that these varying resolution imagery 
        can map to a space that will indicate what the dimensions of these images 
        actually represent. In other words, so that an image of a 1.5-meter 
        section appears to be 1.5 meters in length despite how high of a 
        resolution image you take. Does this mean that getting higher resolution 
        imagery is a bad idea? No, because you can always zoom in to see the 
        finest detail available on the image. The higher the resolution the 
        image is (i.e. the higher the DPI), then the more details that can be 
        seen.
      </para>
    </sect1>

    <sect1>
      <title>Making Sure the DPI of an Image is Correct</title>
      <para>
        Here we will discuss about how to make sure a core image has
        the correct DPI. At this point, let's assume that your
        digital-line-scanner scans the core at 100 dots per
        centimeter. This is equal to 254 DPI.
      </para>

      <para>
        The first thing to do is open the image in a program like
        Adobe Photoshop, or The Gimp. At this point, we will assume
        that you are working with Photoshop.
      </para>

      <para>
        In Photoshop, you will want to view the image's properties by
        going to Image -> Image Size. A dialog will appear showing the
        image width, height, etc. If the resolution does not match the
        expected DPI then we will need to change it. Before doing that
        make sure that the Resample Image checkbox is
        unchecked. Otherwise, when you change the DPI of the image,
        the image will get resized. After you uncheck the Resample
        Image option, edit the Resolution text field and enter the
        correct DPI. At the time of this writing, most core section
        images have a DPI of 254.
      </para>

      <para>
        If you realize that more than one image contains the wrong
        DPI, you can create a batch process in Photoshop to help you
        deal with all the images.
      </para>
    </sect1>

    <sect1>
      <title>Corelyzer Data XML Schema</title>
      <para>
        The Corelyzer Data XML Schema is a fairly simple XML
        schema. It is based off of a version of the Geotek data XML
        format. Examples are available at Sample Data.
      </para>

      <para>
        The root of the Corelyzer XML Schema is &gt;corewall_data&lt;. Inside
        this node are blocks of section tags. The XML schema is simply
        a set of tables, one for each core section. Inside section
        tags are tags to identify which section the table belongs to,
        units of depth, listing of fields and the data retrieved from
        sensors at particular depths.

        Here is a complete example of the XML schema, with sample data
        processed from JANUS:

        <figure>
          <title>Example native Corelyzer data XML file</title>
          <graphic fileref="images/exampleXMLData.png" />
        </figure>

      </para>
    </sect1>
  </appendix>

</book>
