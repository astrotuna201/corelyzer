Building the Corelyzer SceneGraph Library

The Corelyzer Scenegraph Library uses native code so requires some initial 
setup to build completely from source.  We currently provide pre-built 
versions of the library so you will only need to follow these instructions if
you intend to change the native code.

=== Building on Mac OS X ===

These instructions assume you are building on a Mac OS X 10.5 or 10.6 machine
with XCode / Developers Tools already installed.

= Step 1: Install MacPorts =
The MingW cross compiler environment which we are using to generate Windows 
DLLs requires 'wget' and 'gsed' which are available from MacPorts.

Install MacPorts from: http://www.macports.org/install.php
Install 'wget' and 'gsed' via the Terminal:

  $ sudo port install wget gsed


= Step 2: Build the JNI library =
The final step is to build the SceneGraph JNI Library.  You can do this by 
invoking Gradle in the scenegraph/ directory via the Terminal:

  $ ../gradlew clean build-jni

The resulting JAR file, jnilib, and DLLs will be in scenegraph/dist.  You only
need to re-run this step when you change the native code or when you change
the version number.


=== Building on Windows ===

The win32 version of scenegraph was formerly built via cross-compile, but
intractable runtime issues precipitated building on Windows using Microsoft's
Visual Studio 2008.  Required libraries and headers are included. Open win32/vs2008/libscenegraph.vcproj and Rebuild Solution. If all goes well,
scenegraph.dll can be found in the Debug or Release subdirectory.